
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.Fixed fixed1;

	private global::Gtk.ScrolledWindow GtkScrolledWindow;

	private global::Gtk.TextView sourceCodeField;

	private global::Gtk.Label label1;

	private global::Gtk.Button loadFromFileBtn;

	private global::Gtk.Button CompileBtn;

	private global::Gtk.Button processPredicats;

	private global::Gtk.ScrolledWindow GtkScrolledWindow1;

	private global::Gtk.TextView errorList;

	private global::Gtk.Label cursorPoistion;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.WidthRequest = 900;
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("MainWindow");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.fixed1 = new global::Gtk.Fixed();
		this.fixed1.Name = "fixed1";
		this.fixed1.HasWindow = false;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.GtkScrolledWindow = new global::Gtk.ScrolledWindow();
		this.GtkScrolledWindow.Name = "GtkScrolledWindow";
		this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
		this.sourceCodeField = new global::Gtk.TextView();
		this.sourceCodeField.Buffer.Text = "using System;\nusing System.Collections.Generic;\n\npublic class PredicatеSource\n{\n\tpublic bool predicateP(string x)\n\t{\n\t\treturn (x).Length > 1;\n\t}\n\n\tpublic List<string> argxOfP()\n\t{\n\t\tList<string> result = new List<string>();\n\t\tfor (int i = 1; i < 10; result.Add((i++ + 7).ToString())) ;\n\t\treturn result;\n\t}\n\n\n\tpublic List<string> argyOfP()\n\t{\n\t\tList<string> result = new List<string>();\n\t\tfor (int i = 1; i < 10; result.Add(i++.ToString())) ;\n\t\treturn result;\n\t}\n\n\tpublic bool predicateStringPredicat(string Str)\n\t{\n\t\tstring[] puts = Str.Split(new char[] { ' ' });\n\t\tforeach (var s in puts)\n\t\t{\n\t\t\tif (getCountSubItem(puts,s) > 2)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic int getCountSubItem(string[] source, string item)\n\t{\n\t\tint result = 0;\n\t\tforeach (var s in source)\n\t\t\tresult += (s == item) ? 1 : 0;\n\t\treturn result;\n\t}\n\n\tpublic List<string> argStrOfStringPredicat()\n\t{\n\t\tstring filePath = \"/Users/yurabraiko/Documents/source.txt\";\n\t\treturn new List<string>(System.IO.File.ReadAllLines(filePath));\n\t}\n\n}";
		this.sourceCodeField.WidthRequest = 800;
		this.sourceCodeField.HeightRequest = 500;
		this.sourceCodeField.CanFocus = true;
		this.sourceCodeField.Name = "sourceCodeField";
		this.GtkScrolledWindow.Add(this.sourceCodeField);
		this.fixed1.Add(this.GtkScrolledWindow);
		global::Gtk.Fixed.FixedChild w2 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.GtkScrolledWindow]));
		w2.X = 10;
		w2.Y = 150;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.label1 = new global::Gtk.Label();
		this.label1.WidthRequest = 800;
		this.label1.HeightRequest = 130;
		this.label1.Name = "label1";
		this.label1.LabelProp = global::Mono.Unix.Catalog.GetString("Інструкції:  \n\nПоле нижче предназначення для введення коду котрий відповіда за роботу придикатів. Код повинен мати наступну сигнатуру  -  це має бути клас з ім'ям PredicatеSource. Він повинен містити публічні методи, котрі будут мати наступну сигнатуру: predicateІм'яПредиката для задання нового предикату.  Метод повинен повертати логічне значення.  На віхд може отримувати будь які параметри з будь яким ім'ям та будь яким типом.  Для задання множини значення для аргументів предикату потрібно написати метод котрий буде повертати об'єкт типу System.Collections.IEnumerable і мати наступну структуру імені argІм'япредикату_Ім'яАругменту. Окрім зазначених структур коду він також містити довільні елементи(нові класи,  методи....) ");
		this.label1.Wrap = true;
		this.fixed1.Add(this.label1);
		global::Gtk.Fixed.FixedChild w3 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.label1]));
		w3.X = 10;
		w3.Y = 10;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.loadFromFileBtn = new global::Gtk.Button();
		this.loadFromFileBtn.CanFocus = true;
		this.loadFromFileBtn.Name = "loadFromFileBtn";
		this.loadFromFileBtn.UseUnderline = true;
		this.loadFromFileBtn.Label = global::Mono.Unix.Catalog.GetString("Завантажити з файлу");
		this.fixed1.Add(this.loadFromFileBtn);
		global::Gtk.Fixed.FixedChild w4 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.loadFromFileBtn]));
		w4.X = 10;
		w4.Y = 670;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.CompileBtn = new global::Gtk.Button();
		this.CompileBtn.CanFocus = true;
		this.CompileBtn.Name = "CompileBtn";
		this.CompileBtn.UseUnderline = true;
		this.CompileBtn.Label = global::Mono.Unix.Catalog.GetString("Скомпілювати");
		this.fixed1.Add(this.CompileBtn);
		global::Gtk.Fixed.FixedChild w5 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.CompileBtn]));
		w5.X = 150;
		w5.Y = 670;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.processPredicats = new global::Gtk.Button();
		this.processPredicats.CanFocus = true;
		this.processPredicats.Name = "processPredicats";
		this.processPredicats.UseUnderline = true;
		this.processPredicats.Label = global::Mono.Unix.Catalog.GetString("Перейти до робот з предикатами");
		this.fixed1.Add(this.processPredicats);
		global::Gtk.Fixed.FixedChild w6 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.processPredicats]));
		w6.X = 300;
		w6.Y = 670;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow();
		this.GtkScrolledWindow1.WidthRequest = 800;
		this.GtkScrolledWindow1.HeightRequest = 100;
		this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
		this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
		// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
		this.errorList = new global::Gtk.TextView();
		this.errorList.CanFocus = true;
		this.errorList.Name = "errorList";
		this.errorList.Editable = false;
		this.GtkScrolledWindow1.Add(this.errorList);
		this.fixed1.Add(this.GtkScrolledWindow1);
		global::Gtk.Fixed.FixedChild w8 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.GtkScrolledWindow1]));
		w8.X = 10;
		w8.Y = 710;
		// Container child fixed1.Gtk.Fixed+FixedChild
		this.cursorPoistion = new global::Gtk.Label();
		this.cursorPoistion.Name = "cursorPoistion";
		this.fixed1.Add(this.cursorPoistion);
		global::Gtk.Fixed.FixedChild w9 = ((global::Gtk.Fixed.FixedChild)(this.fixed1[this.cursorPoistion]));
		w9.X = 700;
		w9.Y = 675;
		this.Add(this.fixed1);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.DefaultWidth = 900;
		this.DefaultHeight = 910;
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
	}
}
